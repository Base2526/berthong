map $http_upgrade $connection_upgrade { # upgrade connection headers
    default upgrade;
    '' close;
}

upstream subscription {
  server 157.245.51.177:4000; #  host and port of local running server instance
}

server {
    listen 80 ;
    listen [::]:80;
    server_name www.banlist.info banlist.info www.theberthong.store theberthong.store;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

server {
  # listen 80;

  listen       443 ssl;
  listen       [::]:443 ssl;

  server_name www.banlist.info banlist.info www.theberthong.store theberthong.store;

  #ssl on;
  ssl_certificate /etc/nginx-sp/ssl/banlist_info.crt;
  ssl_certificate_key /etc/nginx-sp/ssl/private.key;


  proxy_set_header    Host              $host;
  proxy_set_header    X-Real-IP         $remote_addr;
  proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header    X-Forwarded-SSL   on;
  proxy_set_header    X-Forwarded-Proto $scheme;

  # merge_slashes off;

  location / {
    root /usr/share/nginx/html;
    index index.html index.htm;
    try_files $uri $uri/ /index.html =404;
  }

  include /etc/nginx/extra-conf.d/*.conf;

  location /graphql {
    proxy_pass http://157.245.51.177:4000/graphql;
    #proxy_pass http://localhost:4000/graphql;  # local url of the http endpoint
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $http_connection;
    proxy_set_header Host $host;
  }

  location /subscription { # websocket endpoint
    proxy_pass http://subscription/graphql; # local url of the websocket endpoint
    # the host should be the upstream here which would resolve the
    # upstream url and host
    
    proxy_redirect     default;
    proxy_http_version 1.1;

    proxy_set_header   Connection        $connection_upgrade;
    proxy_set_header   Upgrade           $http_upgrade; 

    proxy_set_header   Host              $host;
    proxy_set_header   X-Real-IP         $remote_addr;
    proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;

    client_max_body_size       10m;
    client_body_buffer_size    128k;

    proxy_connect_timeout      90;
    proxy_send_timeout         90;
    proxy_read_timeout         90;
  }

  # location /images {
  #   proxy_pass http://localhost:4000;
  # }

  location ^~ /images
  {
      alias /var/storage;

      add_header Cache-control "public";
      access_log   off;
      expires      90d;
  }

  location ~* ^.+\.(jpeg|gif|png|jpg)
  {
      add_header Cache-control "public";
      access_log   off;
      expires      90d;
  }
  
  # location ~ ^/images/.+ {
  #   proxy_pass http://157.245.51.177:4000;
  #   #proxy_pass http://localhost:4000/graphql;  # local url of the http endpoint
  #   #proxy_set_header Upgrade $http_upgrade;
  #   #proxy_set_header Connection $http_connection;
  #   #proxy_set_header Host $host;
  # }
  # This requests the original file from itself and then resizes the image.
  # location /images/.+ {
    
  #   # Again replace with your sub/domain.
  #   proxy_pass    http://157.245.51.177:4000/$1;

  #   # proxy_cache resizedimages;
  #   # proxy_cache_key "$host$document_uri";
  #   # proxy_cache_valid 200 1d;
  #   # proxy_cache_valid any 1m;
  #   # proxy_cache_use_stale error timeout invalid_header updating;

  #   # image_filter                resize $1 $2;
  #   image_filter_jpeg_quality   90;
  #   image_filter_buffer         20M;
  #   image_filter_interlace      on;
  # }
}

# server {
#   listen 3000;
#   server_name graphql.banlist.info;
#   location / {
#     proxy_pass http://localhost:4000/graphql;
#   }
# }
