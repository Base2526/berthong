FROM node:12-alpine as builder

ENV REACT_APP_DEBUG TRUE
ENV REACT_APP_URL https://bgcd-retail-audit-backend.bigc.co.th
ENV REACT_APP_AUTHORIZATION YWRtaW46MTIzNA==

ENV REACT_APP_HOST_GRAPHAL banlist.info

ENV NODE_ENV development

RUN apk add --update --no-cache \
    make \
    g++ \
    jpeg-dev \
    cairo-dev \
    giflib-dev \
    pango-dev \
    libtool \
    autoconf \
    automake

RUN  npm install nodemon -g --save
WORKDIR /app
COPY . .

# RUN npm cache clean --force
RUN npm i --save --legacy-peer-deps
RUN npm run build 

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
# FROM nginx:1.15
# COPY --from=build-stage /app/build/ /usr/share/nginx/html

# dev
# EXPOSE 3000 < Is defualt post not setup
# CMD [ "npm", "run", "start" ]


# nginx state for serving content
FROM nginx:1.18.0-alpine
# Set working directory to nginx asset directory
WORKDIR /usr/share/nginx/html

# Remove default nginx static assets
RUN rm -rf ./*
# Copy static assets from builder stage
COPY --from=builder /app/build .

# COPY ./etc/nginx/nginx.conf /etc/nginx/nginx.conf
#COPY /etc/conf.d/nginx.conf /etc/nginx/conf.d/default.conf


# SSL
COPY ./ssl/FCAD0CB87FF0A54807D4335D436A2719.txt .well-known/pki-validation/FCAD0CB87FF0A54807D4335D436A2719.txt
COPY ./ssl /etc/nginx-sp/ssl
COPY ./nginx.conf /etc/nginx/conf.d/default.conf
# SSL


# Containers run nginx with global directives and daemon off
ENTRYPOINT ["nginx", "-g", "daemon off;"]